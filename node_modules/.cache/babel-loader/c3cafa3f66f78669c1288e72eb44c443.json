{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Sam/Downloads/QKart-Frontend-V2-main/QKart_Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Sam/Downloads/QKart-Frontend-V2-main/QKart_Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Sam/Downloads/QKart-Frontend-V2-main/QKart_Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Stack,TextField}from\"@mui/material\";import{Box}from\"@mui/system\";import axios from\"axios\";import{useSnackbar}from\"notistack\";import React,{useState}from\"react\";import{useHistory,Link}from\"react-router-dom\";import{config}from\"../App\";import Footer from\"./Footer\";import Header from\"./Header\";import\"./Login.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],updateUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],udpatePassword=_useState4[1];var history=useHistory();// TODO: CRIO_TASK_MODULE_LOGIN - Fetch the API response\n/**\n   * Perform the Login API call\n   * @param {{ username: string, password: string }} formData\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * API endpoint - \"POST /auth/login\"\n   *\n   * Example for successful response from backend:\n   * HTTP 201\n   * {\n   *      \"success\": true,\n   *      \"token\": \"testtoken\",\n   *      \"username\": \"criodo\",\n   *      \"balance\": 5000\n   * }\n   *\n   * Example for failed response from backend:\n   * HTTP 400\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Password is incorrect\"\n   * }\n   *\n   */var login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(formData){var url,res,_res$data,token,_username,balance;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0://  console.log(formData)\nurl=config.endpoint;_context.prev=1;_context.next=4;return axios.post(\"\".concat(url,\"/auth/login\"),formData);case 4:res=_context.sent;if(res.data.success){enqueueSnackbar(\"Logged in successfully\",{variant:'success'});_res$data=res.data,token=_res$data.token,_username=_res$data.username,balance=_res$data.balance;persistLogin(token,_username,balance-0);}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);axios.post(\"\".concat(url,\"/auth/login\"),formData).catch(function(e){if(e.response){console.log(e.response);enqueueSnackbar(e.response.data.message,{variant:'error'});}else{// Something happened in setting up the request that triggered an Error\nenqueueSnackbar(\"Something went wrong. Check that the backend is running, reachable and returns valid JSON.\",{variant:'error'});}});case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));return function login(_x){return _ref.apply(this,arguments);};}();// TODO: CRIO_TASK_MODULE_LOGIN - Validate the input\n/**\n   * Validate the input values so that any bad or illegal values are not passed to the backend.\n   *\n   * @param {{ username: string, password: string }} data\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * @returns {boolean}\n   *    Whether validation has passed or not\n   *\n   * Return false and show warning message if any validation condition fails, otherwise return true.\n   * (NOTE: The error messages to be shown for each of these cases, are given with them)\n   * -    Check that username field is not an empty value - \"Username is a required field\"\n   * -    Check that password field is not an empty value - \"Password is a required field\"\n   */var datas={\"username\":username,\"password\":password};var evenHandler=function evenHandler(){validateInput(datas)&&login(datas);};var validateInput=function validateInput(_ref2){var username=_ref2.username,password=_ref2.password;if(username===\"\"){enqueueSnackbar(\"Username is a required field\",{variant:'warning'});return false;}if(password===\"\"||password.length<6){enqueueSnackbar(\"Password is a required field\",{variant:'warning'});return false;}return true;};// TODO: CRIO_TASK_MODULE_LOGIN - Persist user's login information\n/**\n   * Store the login information so that it can be used to identify the user in subsequent API calls\n   *\n   * @param {string} token\n   *    API token used for authentication of requests after logging in\n   * @param {string} username\n   *    Username of the logged in user\n   * @param {string} balance\n   *    Wallet balance amount of the logged in user\n   *\n   * Make use of localStorage: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n   * -    `token` field in localStorage can be used to store the Oauth token\n   * -    `username` field in localStorage can be used to store the username that the user is logged in as\n   * -    `balance` field in localStorage can be used to store the balance amount in the user's wallet\n   */var persistLogin=function persistLogin(token,username,balance){localStorage.setItem(\"token\",token);localStorage.setItem('username',username);localStorage.setItem('balance',balance);history.push(\"/\");};return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",minHeight:\"100vh\",children:[/*#__PURE__*/_jsx(Header,{hasHiddenAuthButtons:true}),/*#__PURE__*/_jsx(Box,{className:\"content\",children:/*#__PURE__*/_jsxs(Stack,{spacing:2,className:\"form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Login\"}),/*#__PURE__*/_jsx(TextField,{id:\"username\",label:\"username\",name:\"username\",value:username,onChange:function onChange(e){return updateUsername(e.target.value);},type:\"text\",variant:\"outlined\",fullWidth:true}),/*#__PURE__*/_jsx(TextField,{id:\"password\",label:\"password\",type:\"password\",name:\"password\",value:password,onChange:function onChange(e){return udpatePassword(e.target.value);},variant:\"outlined\",fullWidth:true}),/*#__PURE__*/_jsx(Button,{className:\"button\",variant:\"contained\",onClick:evenHandler,children:\"LOGIN TO QKART\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"secondary-action\",children:[\"Don\\u2019t have an account?\",\" \",/*#__PURE__*/_jsx(Link,{to:\"/register\",className:\"link\",children:\"Register now\"})]})]})}),/*#__PURE__*/_jsx(Footer,{})]});};export default Login;","map":{"version":3,"names":["Button","Stack","TextField","Box","axios","useSnackbar","React","useState","useHistory","Link","config","Footer","Header","jsx","_jsx","jsxs","_jsxs","Login","_useSnackbar","enqueueSnackbar","_useState","_useState2","_slicedToArray","username","updateUsername","_useState3","_useState4","password","udpatePassword","history","login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","url","res","_res$data","token","_username","balance","wrap","_callee$","_context","prev","next","endpoint","post","concat","sent","data","success","variant","persistLogin","t0","catch","e","response","console","log","message","stop","_x","apply","arguments","datas","evenHandler","validateInput","_ref2","length","localStorage","setItem","push","display","flexDirection","justifyContent","minHeight","children","hasHiddenAuthButtons","className","spacing","id","label","name","value","onChange","target","type","fullWidth","onClick","to"],"sources":["C:/Users/Sam/Downloads/QKart-Frontend-V2-main/QKart_Frontend/src/components/Login.js"],"sourcesContent":["import { Button, Stack, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { config } from \"../App\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"./Login.css\";\n\n\n\nconst Login = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [username,updateUsername]=useState(\"\");\n  const [password,udpatePassword]=useState(\"\");\n  const history=useHistory();\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Fetch the API response\n  /**\n   * Perform the Login API call\n   * @param {{ username: string, password: string }} formData\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * API endpoint - \"POST /auth/login\"\n   *\n   * Example for successful response from backend:\n   * HTTP 201\n   * {\n   *      \"success\": true,\n   *      \"token\": \"testtoken\",\n   *      \"username\": \"criodo\",\n   *      \"balance\": 5000\n   * }\n   *\n   * Example for failed response from backend:\n   * HTTP 400\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Password is incorrect\"\n   * }\n   *\n   */\n  const login = async (formData) => {\n\n  //  console.log(formData)\n    let url=config.endpoint;\n    try{\n\n      let res= await axios.post(`${url}/auth/login`,formData);\n      if(res.data.success){\n        enqueueSnackbar(\"Logged in successfully\",{ variant: 'success' });\n        let {token,username,balance}=res.data;\n        persistLogin(token,username,balance-0)\n      \n      }\n    }catch(e){\n      axios.post(`${url}/auth/login`,formData).catch((e)=>{\n        if(e.response){\n          console.log(e.response)\n          enqueueSnackbar(e.response.data.message,{ variant: 'error' })\n        }\n        else {\n          // Something happened in setting up the request that triggered an Error\n          enqueueSnackbar(\"Something went wrong. Check that the backend is running, reachable and returns valid JSON.\",{ variant: 'error' })\n        }\n      })\n    }\n\n\n  };\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Validate the input\n  /**\n   * Validate the input values so that any bad or illegal values are not passed to the backend.\n   *\n   * @param {{ username: string, password: string }} data\n   *  Object with values of username, password and confirm password user entered to register\n   *\n   * @returns {boolean}\n   *    Whether validation has passed or not\n   *\n   * Return false and show warning message if any validation condition fails, otherwise return true.\n   * (NOTE: The error messages to be shown for each of these cases, are given with them)\n   * -    Check that username field is not an empty value - \"Username is a required field\"\n   * -    Check that password field is not an empty value - \"Password is a required field\"\n   */\n\n  let datas={\n    \"username\":username,\"password\":password\n  }\n   const  evenHandler=()=>{\n    validateInput(datas) && login(datas)\n  }\n\n  const validateInput = ({username,password}) => {\n        if(username===\"\"){\n          enqueueSnackbar(\"Username is a required field\",{ variant: 'warning' });\n          return false;\n        }\n        if(password===\"\" || password.length<6){\n          enqueueSnackbar(\"Password is a required field\",{ variant: 'warning' });\n          return false;\n        }\n        return true;\n  };\n\n  // TODO: CRIO_TASK_MODULE_LOGIN - Persist user's login information\n  /**\n   * Store the login information so that it can be used to identify the user in subsequent API calls\n   *\n   * @param {string} token\n   *    API token used for authentication of requests after logging in\n   * @param {string} username\n   *    Username of the logged in user\n   * @param {string} balance\n   *    Wallet balance amount of the logged in user\n   *\n   * Make use of localStorage: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n   * -    `token` field in localStorage can be used to store the Oauth token\n   * -    `username` field in localStorage can be used to store the username that the user is logged in as\n   * -    `balance` field in localStorage can be used to store the balance amount in the user's wallet\n   */\n\n\n  \n\n\n  const persistLogin = (token, username, balance) => {\n\n    localStorage.setItem(\"token\",token);\n    localStorage.setItem('username',username);\n    localStorage.setItem('balance',balance);\n    history.push(\"/\")\n\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      minHeight=\"100vh\"\n    >\n      <Header hasHiddenAuthButtons={true} />\n      <Box className=\"content\">\n        <Stack spacing={2} className=\"form\">\n          <h2 className={\"title\"}>Login</h2>\n          <TextField \n          id=\"username\"\n           label=\"username\" \n           name=\"username\"\n           value={username}\n           onChange={(e)=>updateUsername(e.target.value)}\n           type=\"text\"\n           variant=\"outlined\" \n           fullWidth\n           />\n           <TextField \n          id=\"password\"\n           label=\"password\" \n           type=\"password\"\n           name=\"password\"\n           value={password}\n           onChange={(e)=>udpatePassword(e.target.value)}\n           variant=\"outlined\"\n           fullWidth\n           />\n           <Button  \n           className=\"button\" \n           variant=\"contained\"\n           onClick={evenHandler}\n           >LOGIN TO QKART</Button>\n           <p className=\"secondary-action\">\n           Don’t have an account?{\" \"}\n            <Link to=\"/register\" className={\"link\"}>Register now</Link>\n          </p>\n           \n        </Stack>\n      </Box>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}